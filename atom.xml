<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tech @ Namshi.com]]></title>
  <link href="http://tech.namshi.com/atom.xml" rel="self"/>
  <link href="http://tech.namshi.com/"/>
  <updated>2014-06-24T23:38:36+04:00</updated>
  <id>http://tech.namshi.com/</id>
  <author>
    <name><![CDATA[Namshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[When you start working as a software developer...]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/24/when-you-start-working-as-a-software-developer-dot-dot-dot/"/>
    <updated>2014-06-24T23:30:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/24/when-you-start-working-as-a-software-developer-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>&hellip;it&rsquo;s always a joy, full of surprises: what they don&rsquo;t tell you
is that not all of the surprises are much fun.</p>

<!-- more -->


<p>Kudos to <a href="http://tech.namshi.com/team/#Mohamad%20Hallal">Mohamad</a>
who shared his <a href="http://mohdhallal.github.io/blog/2014/06/18/my-top-10-junior-developer-pitfalls/">10 most dramatic moments as a Junior software engineer</a>
in his latest blog post: the whole team at Namshi had so much fun going through
it because:</p>

<ul>
<li>we heard him shouting at Vim</li>
<li>we&rsquo;ve all been there :)</li>
</ul>


<p>&hellip;and what about you? Which ones were your biggest #EPICFAIL?</p>

<p>On a side note, it&rsquo;s great to see how passionate engineers like
Mohamad grown on a daily basis &mdash; especially compared to the
&ldquo;old guys&rdquo; like me: one of his open source libraries,
<a href="https://github.com/namshi/mockserver">Mockserver</a>,
is definitely something you should check out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Where in the world is Carmen San Diego?]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/24/where-in-the-world-is-carmen-san-diego/"/>
    <updated>2014-06-24T23:20:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/24/where-in-the-world-is-carmen-san-diego</id>
    <content type="html"><![CDATA[<p>The team at Namshi is always on the go with some new open source project
that lights up our weekends or solves some of the small dilemmas we daily
face at work.</p>

<!-- more -->


<p>In the past days <a href="http://tech.namshi.com/team/#Luciano%20Colosio">Lucio</a>
has been working on one of his side projects and released
<a href="https://github.com/unlucio/carmensandiego">CarmenSandiego</a> on Github:
it lets you visualize your 4Square checkins on a map
<a href="https://github.com/unlucio/carmensandiego#so-heres-how-you-do-it">in a matter of a few steps</a>,
and it has been written in his beloved NodeJS.</p>

<p>Kudos to Lucio for releasing his work and&hellip;   &hellip;more to come!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #43]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/19/newsletter-number-43/"/>
    <updated>2014-06-19T12:03:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/19/newsletter-number-43</id>
    <content type="html"><![CDATA[<p><strong>TechThursday is here again!</strong></p>

<p>This week we released a new and opensource library on github: <a href="https://github.com/namshi/mockserver">Mockserver</a> for mocking apis, our fellow
<a href="http://tech.namshi.com/team/#Mohamad%20Hallal">Mohamad</a> <a href="http://tech.namshi.com/blog/2014/06/13/mockserver-effortless-api-mocking-library-in-node-js/">wrote a post about it</a>, check it!</p>

<ul>
<li><p><a href="http://wavepot.com/">Wavepot&hellip; just check and have fun with it!</a></p></li>
<li><p><a href="https://github.com/prezi/changelog">Changelog, a tool designed to answer the question “What changed in the last twenty minutes?” trough a simple HTTP api and a web interface</a></p></li>
<li><p><a href="http://blog.kicksend.com/how-we-decreased-sign-up-confirmation-email-bounces-by-50">How we decreased sign up confirmation email bounces by 50%</a></p></li>
<li><p><a href="http://welcometothebundle.com/domain-driven-design-and-symfony-for-simple-app">Domain Driven Design principles with Symfony2</a></p></li>
<li><p><a href="http://php-and-symfony.matthiasnoback.nl/2014/06/how-to-create-framework-independent-controllers/">Symfony2: How to create framework independent controllers?</a></p></li>
<li><p><a href="https://igor.io/2013/02/03/http-foundation-value.html">Symfony2: value of HttpFoundation</a></p></li>
<li><p><a href="https://igor.io/2013/03/31/stateless-services.html">Stateless services</a></p></li>
<li><p><a href="http://www.andresosinski.com/you-job-is-not-to-code.html">Your Job is not to code</a> &ndash; different perspective &ndash; <a href="http://joshsymonds.com/blog/2014/06/15/your-job-is-to-code/">Your job is to code</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="https://julo.ch/blog/docker-dev-environment/">Docker for your dev environment</a></p></li>
<li><p><a href="http://thenextweb.com/dd/2014/06/17/7-web-design-disasters-drive-people-crazy/">7 Web design disasters that drive people crazy</a></p></li>
<li><p><a href="http://stedolan.github.io/jq/">Lightweight and flexible command-line JSON Processor</a></p></li>
<li><p><a href="http://ember.vicramon.com/">Ember Tutorial</a></p></li>
<li><p><a href="http://www.daemonology.net/papers/crypto1hr.pdf">Everything you need to know about cryptography in one hour</a></p></li>
<li><p><a href="http://t.co/GreAnQwaI7">MockServer, effortless API mocking library in Nodejs</a></p></li>
<li><p><a href="http://buff.ly/1hUhRo6">Tesla drops all their patents</a></p></li>
<li><p><a href="http://docs.deis.io/en/latest/understanding_deis/architecture/">Deis: Your PaaS, your rules.</a></p></li>
<li><p><a href="http://www.centurylinklabs.com/flynn-vs-deis-the-tale-of-two-docker-micro-paas-technologies/">Flynn Vs Deis, two Docker-related open source projects compared</a></p></li>
<li><p><a href="http://www.centurylinklabs.com/top-10-open-source-docker-developer-tools/">Top 10 Docker Tools</a></p></li>
<li><p><a href="https://coreos.com/">CoreOs: Linux for Massive Server Deployments</a></p></li>
<li><p><a href="http://www.clearlytech.com/2014/01/04/12-factor-apps-plain-english/">12 factors apps in plain english</a></p></li>
<li><p><a href="https://cipherli.st/">A nice set of strong cipher settings for Apache, Nginx and Lighttpd. A good case study.</a></p></li>
<li><p><a href="https://github.com/mickey/checkzilla">Checkzilla, a simple tool for letting you know about out-of-date software versions</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MockServer, Effortless API Mocking Library in Node Js]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/13/mockserver-effortless-api-mocking-library-in-node-js/"/>
    <updated>2014-06-13T04:22:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/13/mockserver-effortless-api-mocking-library-in-node-js</id>
    <content type="html"><![CDATA[<p>Namshi Tech Team is happy to roll-out a new node-based library!</p>

<p>We present you <a href="https://github.com/namshi/mockserver">MockServer</a>, a library that allows you to easily mock your APIs&#8217; plain HTTP responses.</p>

<!-- more -->


<p>The main benefit of this library is to allow developers to focus on what is important to them, and in this case,
<code>mockserver</code> allows front-end developers to focus their efforts on creating awesome front-end clients without having to worry about the
availability of a complete and running API.</p>

<p>The use of this library can be appreciated by developers following a <a href="http://www.frontendfirst.com/">Front-End First</a>
methodology where development efforts initially focus on front-end clients rather than the back-end structure and tools.
Front-end first suggests that front-end developers have their mocked servers return expected or anticipated HTTP responses
based on the available specification instead of making an actual call to the API.
Another benefit is to allow development for both front-end and back-end in parallel.</p>

<p>In short, this library basically removes the dependency that the front-end development requires from the backend.</p>

<h2>Usage</h2>

<p>Create an empty directory inside your project, <code>mkdir api</code></p>

<p>To start mocking your HTTP responses, you will need to have a sub-directory were all your mocks shall reside. In order to do so,
in your <code>api</code> folder run <code>mkdir mocks</code> and that&rsquo;s where all plain text HTTP responses will reside.</p>

<p>Inside your <code>api</code> directory, run</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install mockserver</span></code></pre></td></tr></table></div></figure>


<p>Create a new js file, say, <code>api.js</code> that has the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">http</span>       <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">mockserver</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;mockserver&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="nx">mockserver</span><span class="p">(</span><span class="s1">&#39;./mocks&#39;</span><span class="p">)).</span><span class="nx">listen</span><span class="p">(</span><span class="s1">&#39;9001&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it! Now navigate from your terminal to the <code>api</code> directory and run <code>node api.js</code>. This will create a node server that
listens to port <code>9001</code>.</p>

<p>Now, you should point your front-end client to <code>http://localhost:9001</code> instead of the actual api url.</p>

<h2>Mocks</h2>

<p>Now, your node server is running and your client can start making requests and getting back mocked HTTP responses.</p>

<p>How do you create the mocks?</p>

<p>Each request relative url path, HTTP method combination resides in a separate text file inside your mocks folder.
The naming of those files goes as follows: <code>path_METHOD</code>, <code>path</code> is the relative url path without any slashes, i.e, <code>/test</code>
should be <code>test</code> and <code>METHOD</code> is the upper-cased HTTP method (<code>GET</code>). The extension for the files should be <code>.mock</code>.
The complete file name is: <code>test_GET.mock</code>.</p>

<p>The contents of the mocked file should be a valid HTTP response text, as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">HTTP</span><span class="o">/</span><span class="mf">1.1</span> <span class="mi">200</span> <span class="nx">OK</span>
</span><span class='line'><span class="nx">Content</span><span class="o">-</span><span class="nx">Type</span><span class="o">:</span> <span class="nx">text</span><span class="o">/</span><span class="nx">html</span><span class="p">;</span> <span class="nx">charset</span><span class="o">=</span><span class="nx">utf</span><span class="o">-</span><span class="mi">8</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;&lt;</span><span class="nx">body</span><span class="o">&gt;</span><span class="nx">Hello</span> <span class="nx">World</span><span class="o">&lt;</span><span class="err">/body&gt;&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, whenever your client requests <code>http://localhost:9001/test</code>, <code>mockserver</code> will return that plain HTTP response you defined
in <code>test_GET.mock</code>.</p>

<h2>Header Variation</h2>

<p>Mockserver also supports different responses for the the same request path, method pair. You can make use of this feature by manually setting a
<code>mockserver-variation</code> header in your requests. The value of this header shall be appended to the mocked file name as follows: <code>path_METHOD_variation</code>.</p>

<p>Here is where you are able to handle various server HTTP responses for your request (200, 400, 500, 403, etc..).
Simply set <code>mockserver-variation</code> to <code>500</code> and the file from our previous example should be named <code>test_GET_500.mock</code>.</p>

<h2>Multi-level URLs</h2>

<p>If you are wondering how to mock HTTP responses for a multi-level URL like <code>http://localhost:9001/test1/test2</code> here is how to do it:</p>

<ul>
<li>Inside your <code>mocks</code> directory, run <code>mkdir test1</code></li>
<li><code>cd test1</code> and <code>touch test2.mock</code></li>
<li>Insert your raw HTTP response text in <code>test2.mock</code></li>
</ul>


<h2>Conclusion</h2>

<p>Although simple and straight forward, the idea behind <code>mockserver</code> is quite powerful. It is mostly suited for a Front-end First methodology, some of the
benefits include parallel front-end and back-end development and the decoupling of the Front-end and back-end during the development phase.</p>

<p>It would be great if you can take the time to try it out and let us know what you think!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #42]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/12/newsletter-number-42/"/>
    <updated>2014-06-12T12:03:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/12/newsletter-number-42</id>
    <content type="html"><![CDATA[<p><strong>techThursday is here folks!</strong></p>

<p>Wanna join us? We are still hiring!
We have cookies, #Symfony2, #nodejs, #AngularJS, #redis, #rabbitmq and coding challenges for you: <a href="http://buff.ly/1oyuSUK">http://buff.ly/1oyuSUK</a></p>

<ul>
<li><p><a href="http://serverspec.org">Serverspec: write rspec for your servers</a></p></li>
<li><p><a href="https://wiki.php.net/rfc/uniform_variable_syntax">PHP: rfc on uniform variable syntax</a></p></li>
<li><p><a href="https://github.com/r7kamura/jsonism">Jsonism, generate http clients from a json schema</a></p></li>
<li><p><a href="https://devopsu.com/blog/docker-misconceptions">Docker Misconceptions</a></p></li>
<li><p><a href="http://addyosmani.com/blog/automating-web-performance-measurement-with-psi-for-node/">Automating Web Performance Measurement With PSI For Node</a></p></li>
<li><p><a href="http://jsnice.org/">Jsnice statical renaming, type inference and deobfuscation</a></p></li>
<li><p><a href="https://tessel.io/">Tessel: hardware development for software developers (javascript and node)</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="http://www.smashingmagazine.com/2014/06/11/building-with-gulp/">Building with Gulp &ndash; Bonus Browser Sync</a></p></li>
<li><p><a href="http://www.leaseweblabs.com/2013/04/symfony2-consistent-routing/">Symfony2 consistent routing</a></p></li>
<li><p><a href="http://www.entrepreneur.com/article/234492">7 Reasons to Ditch the Corporate World for a Career at a Startup</a></p></li>
<li><p><a href="http://www.phoronix.com/scan.php?page=news_item&amp;px=MTcxNjU">Civilization 5 is finally released for linux platform</a></p></li>
<li><p><a href="http://www.allthingsdistributed.com/2008/12/eventually_consistent.html">Very good read on distributed systems/databases</a></p></li>
<li><p><a href="https://github.com/krakjoe/jitfu">Create (and evaluate) native JIT code in PHP</a></p></li>
<li><p><a href="http://jacquesmattheij.com/the-several-million-dollar-bug">The Several Million Dollar Bug</a></p></li>
<li><p><a href="http://blog.newrelic.com/2014/06/03/10-secrets-learned-software-engineering-degree-probably-didnt/?utm_source=Leanstack+Weekly&amp;utm_campaign=7b735e78b9-Leanstack_Weekly_54&amp;utm_medium=email&amp;utm_term=0_2911f8fd09-7b735e78b9-341766961">10 Secrets You Should Have Learned With Your Software Engineering Degree &ndash; But Probably Didn’t</a></p></li>
<li><p><a href="https://www.gitlab.com/">Open Source, Self Hosted, Git Management Software</a></p></li>
<li><p><a href="http://www.landsnail.com/apple/local/steve-jobs-resume/Resume.html">Steve Jobs Resume</a></p></li>
<li><p><a href="http://www.broken-links.com/2014/06/09/voyeurism-mutation-object-observers">Mutation and Object Observers for Watching DOM and JS Objects Changes</a></p></li>
<li><p><a href="http://css-tricks.com/using-encapsulation-semantic-markup/">Using Encapsulation for Semantic Markup</a></p></li>
<li><p><a href="http://dev.opera.com/articles/css-will-change-property/">Everything You Need to Know About the CSS will-change Property</a></p></li>
<li><p><a href="http://intercoolerjs.org/">intercooler.js: add AJAX to your web application using simple, declarative HTML attributes</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wanna join us? We have cookies, Symfony2, Node, AngularJS and coding challenges for you!]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/08/wanna-join-us-we-have-cookies-symfony2-node-angularjs-and-coding-challenges-for-you/"/>
    <updated>2014-06-08T11:44:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/08/wanna-join-us-we-have-cookies-symfony2-node-angularjs-and-coding-challenges-for-you</id>
    <content type="html"><![CDATA[<p>A quick update from the trenches: for the past months
we&rsquo;ve been beefing our team up and by doing so we
realized that some good coding challenges are
almost a must.</p>

<p>We just put all the challenges we&rsquo;ve used and are gonna
be using on a <a href="https://github.com/namshi/coding-challenges">github repo for you to check them out</a>:
feel free to solve them, fork them, improve them, do anything
with them! :)</p>

<p>We are currently hiring <a href="https://github.com/namshi/coding-challenges/blob/master/senior-api-engineer.md">senior API engineers</a>, <a href="https://github.com/namshi/coding-challenges/blob/master/senior-frontend-engineer.md">senior frontend
engineers</a> and are looking to bootstrap our mobile team
with a <a href="https://github.com/namshi/coding-challenges/blob/master/lead-mobile-engineer.md">Lead Mobile Engineer</a>:
got leads? Got skills? Reach out and let&rsquo;s do Service-Oriented Architectures together!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reconfig: declarative JavaScript configurations]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/07/reconfi-declarative-javascript-configurations/"/>
    <updated>2014-06-07T00:50:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/07/reconfi-declarative-javascript-configurations</id>
    <content type="html"><![CDATA[<p>We recently published a new library that let&rsquo;s you
deal with configurations, in JavaScript, in a very
elegant way.</p>

<p>The library is called <a href="https://github.com/namshi/reconfig">Reconfig</a> and it&rsquo;s available
through <a href="https://www.npmjs.org/package/reconfig">NPM</a> (if you need on the browser we highly
recommend <a href="http://browserify.org/">browserify</a>): it&rsquo;s really
small and simple, and thought to keep your
configuration as elegant, simple and declarative as possible.</p>

<!-- more -->


<p>With reconfig you can do stuff like:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">reconfig</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;reconfig&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">config</span> <span class="o">=</span>  <span class="k">new</span> <span class="nx">reconfig</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">greet</span><span class="o">:</span> <span class="s1">&#39;Hello :who!&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">sayhi</span><span class="o">:</span> <span class="s1">&#39;{{ greet }}&#39;</span>
</span><span class='line'>    <span class="nx">countries</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">uae</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">population</span><span class="o">:</span> <span class="s1">&#39;2M&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">nationalDay</span><span class="o">:</span> <span class="s1">&#39;December 2nd&#39;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="c1">// ...</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// Retrieve a deep config value</span>
</span><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;countries.uae.nationalDay&#39;</span><span class="p">);</span> <span class="c1">// December, 2nd</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Pass parameters to the configuration</span>
</span><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;greet&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">who</span><span class="o">:</span> <span class="s1">&#39;John&#39;</span><span class="p">});</span> <span class="c1">// Hello, John!</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Reference other configuration parameters</span>
</span><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;sayhi&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">who</span><span class="o">:</span> <span class="s1">&#39;John&#39;</span><span class="p">});</span> <span class="c1">// Hello, John!</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Fallback values</span>
</span><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;something&#39;</span><span class="p">,</span> <span class="p">{},</span> <span class="s1">&#39;invalid&#39;</span><span class="p">);</span> <span class="c1">// invalid</span>
</span></code></pre></td></tr></table></div></figure>


<p>We&rsquo;re probably gonna look into porting the same to
PHP (another big player in our stack) so&hellip;stay tuned!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #41]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/05/newsletter-number-41/"/>
    <updated>2014-06-05T12:03:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/05/newsletter-number-41</id>
    <content type="html"><![CDATA[<p>Hi fellas, it&rsquo;s #techThursday an here we are with the usual list of interesting topics and resources for the upcoming weekend!</p>

<p>We publish several blog posts in the latest weeks, to be up-to-date just follow us on <a href="http://twitter.com/TechNamshi">twitter</a>.</p>

<p><strong>And you know what? We are hiring</strong> : <strong><a href="http://buff.ly/1pP7x0n">we are looking for a Lead Mobile Developer!</a></strong></p>

<!-- more -->


<ul>
<li><p><a href="http://buff.ly/1pP7x0n">Like Android &amp; iOS? Let&rsquo;s revolutionize shopping in the Middle East! We are hiring a mobile lead developer</a></p></li>
<li><p><a href="http://buff.ly/1nfhXWK">Developers don&rsquo;t write code, they write essays</a></p></li>
<li><p><a href="http://buff.ly/UbTMiq">How We Use Docker To Continuously Deliver Microservices</a></p></li>
<li><p><a href="https://github.com/boot2docker/boot2docker">Boot2Docker: a lightweight Linux distribution made specifically to run Docker containers. Even on you OS X or Windows machine!</a></p></li>
<li><p><a href="http://buff.ly/1h7heav">Meta-programming in JavaScript Using Proxies</a></p></li>
<li><p><a href="http://buff.ly/1ktHCpK">New, Cost-Effective Memory-Optimized DB Instances for Amazon RDS</a></p></li>
<li><p><a href="http://buff.ly/1hJJtqK">PHP 5.6.0beta3 Released</a></p></li>
<li><p><a href="http://buff.ly/RLoUTL">Konzole, a very simple tool to create console apps for #nodejs</a></p></li>
<li><p><a href="http://nondot.org/sabre/">A little of background to how Swift (the new programming language by Apple) development was started</a></p></li>
<li><p><a href="https://github.com/fullstackio/FlappySwift">Swift implementation of flappy bird, on github</a></p></li>
<li><p><a href="http://aosabook.org/en/llvm.html">The LLVM architecture</a></p></li>
<li><p><a href="http://www.trustedreviews.com/opinions/samsung-tizen-os-features">Samsung Tizen OS: 6 Things You Need To Know</a></p></li>
<li><p><a href="http://www.wired.com/2014/06/contiki/">Out in the open: the little-known Open Source OS that rules the Internet of things</a></p></li>
<li><p><a href="http://http://gaudi.io/">Setup of isolated and decoupled dev environments</a></p></li>
<li><p><a href="http://matt.aimonetti.net/posts/2013/08/27/what-technology-should-my-startup-use/">What Technology Should My Startup Use?</a></p></li>
<li><p><a href="http://leanstack.io/categories">Categorized list of great web application/service including companies using it</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Developers don't write code, they write essays]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/04/developers-dont-write-code-they-write-essays/"/>
    <updated>2014-06-04T21:07:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/04/developers-dont-write-code-they-write-essays</id>
    <content type="html"><![CDATA[<p>I am always amazed by the quantity of errors I make,
on a daily basis, when writing some code: it&rsquo;s true that&rsquo;s
not my <strong>primary</strong> job, but at the same
time it always feels painful to find bugs or edge cases.</p>

<p>But one of the things I&rsquo;m usually good at it&rsquo;s trying
to keep things as universal, simple and self-explanatory
as possible, as I&rsquo;ve learnt, so far, that the worst enemy
of my code is <strong>me in 6 months</strong>.</p>

<!-- more -->


<p>Today, for example, I was discussing with <a href="http://tech.namshi.com/blog/2014/05/26/welcome-lucio/">Lucio</a>
how to handle a list of errors: suppose that the user
performs an action that generates a bunch of errors, and that
you have an error handler that needs to deal with all of them.</p>

<p>The error handler might receive a list of these errors, process
them one by one and then let other guys take the stage: a common
solution would be to feed the handler the list of errors and let it
pop them from the list as soon as he&rsquo;s  <em>handled</em> them.</p>

<figure class='code'><figcaption><span>Some pseudo code</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ErrorHandler</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">property</span> <span class="n">queue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">addError</span> <span class="p">(</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">queue</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">error</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">handle</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">foreach</span> <span class="p">(</span><span class="n">error</span> <span class="k">in</span> <span class="n">queue</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">doStuff</span><span class="p">(</span><span class="n">error</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nothing exceptional with the pseudo-code above, but we were wondering
(as our piece of code is a bit more complex) how to name the list of
errors that the handler deals with to make it a bit more declarative.</p>

<p>Since the error handler acts as a <a href="http://en.wikipedia.org/wiki/FIFO">FIFO</a>
it felt natural, for Lucio, call this a <strong>queue</strong>. I suggested <strong>stack</strong>
but upon thinking about it we agreed that since a stack act as
<a href="http://en.wikipedia.org/wiki/LIFO_(computing">LIFO</a> it wasn&rsquo;t the best idea.</p>

<p><a href="http://www.cs.cmu.edu/~adamchik/15-121/lectures/Stacks%20and%20Queues/Stacks%20and%20Queues.html">Things like this</a> might sound silly, but they <strong>extremely important</strong>
when you work with other ten people on a complex domain that
you are trying to keep as simple (and real) as possible.</p>

<p>We often forget that translating concepts into working code is our
main duty, and by doing so we need to keep things as clear / clean as possible:
how many times did you hear <em>&ldquo;Oh that guy wrote it, he knows how it works, ask him&rdquo;</em>?
I cry everytime I hear that.</p>

<p>When you are assigned a task, first think of the simplest and most exhaustive
solution, then write the code: your job is not measured by lines of code, but by
working software, which means maintainable, decoupled, easy to understand, (ultimately)
beautiful code.</p>

<p>What is the difference between an essay and some code? Ideally there is none:</p>

<ul>
<li>you explain / implement a concept / feature</li>
<li>your artifact needs to be understandable</li>
<li>it targets 2 audiences

<ul>
<li>a technical one, which needs to be able to understand it in depth</li>
<li>a more general one, which needs to grasp the main concepts</li>
</ul>
</li>
</ul>


<p>Actually, there is <strong>one</strong> difference between essays and software development: the
language they&rsquo;re written in.</p>

<p>But they all need to be self-explanatory, they
all need to nail the problem without the need to dig too deep into
the explanation, they all need to get straight to the point, making
things explicit rather than implicit.</p>

<p>Keep writing essays, no matter if in C, JavaScript or English. Just avoid COBOL.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goodbye Muhammad!]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/03/goobye-muhammad/"/>
    <updated>2014-06-03T22:46:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/03/goobye-muhammad</id>
    <content type="html"><![CDATA[<p><img class="left team" src="http://tech.namshi.com/images/riaz.jpeg" title="Muhammad Riaz" ></p>

<p>As much as we hate to see people leaving, I think
it&rsquo;s a good thing to waive the nostalgic feelings
and celebrate who has decided to move on: for better
or for worse, each and everyone in our team has played
a key role in evolving to what I call <em>&ldquo;The tech family&rdquo;</em>.</p>

<p>I must admit that I&rsquo;m a bit late with saying goodbye to
<a href="https://ae.linkedin.com/pub/muhammad-riaz/10/777/414">Muhammad</a>, but I eventually wanted to do this as I believe
his mermerizing persona, the laugh, the commitment that
he showed in his 2-year tenure are second to none.</p>

<!-- more -->


<p>Muhammad has joined us even before I got to Dubai,
and left us after core contributions to our
architecture: from rushing to fix as many bugs as possible
to putting all he had in re-architecting core
components of our stack, like our main API and
integrations with payment providers: for example,
he&rsquo;s been crucial in implementing 3D-secure
authentication in our
<a href="https://github.com/namshi/innovate">namshi/innovate</a> library.</p>

<p>Last we heard is that he would have rushed to Europe
in order to join an exciting startup.</p>

<p>Bring your <a href="http://www.stylehoster.com/lpc/uploads/2014/01/Latest-Salwar-Kameez-Designs-2014-For-Pakistani-Men.gif">Kameez</a> with you man,
and remember you still have some brothers in Dubai!</p>

<p>Aye!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Like Android and iOS? Let's change shopping in the Middle East together!]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/03/like-android-and-ios-lets-change-shopping-in-the-middle-east-together/"/>
    <updated>2014-06-03T16:42:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/03/like-android-and-ios-lets-change-shopping-in-the-middle-east-together</id>
    <content type="html"><![CDATA[<p>Do you like Java? Ok, I possibly started from the wrongest question.</p>

<p>Restart.</p>

<p>Do you like Android? (sounds much better!) And what about iOS? Tablets?
Mobile devices in general? If so, come over and let&rsquo;s change the way
people shop in the Middle East.</p>

<p>We are looking for a <strong>Lead Mobile Developer</strong>, someone who can get his hands
dirty with both of the main platforms, and teach others how to do it: we&rsquo;d
like you to bring in your expertise and help kicking off our mobile
development team.</p>

<!-- more -->


<h2>What do we need?</h2>

<p>Our need is to kickoff an internal development team, which could even be split by
iOS and Android, and to do so we would need to make a first, very good hire and
find a lead who can drive all the way to success.</p>

<p>How will your typical day look like? You will go over a <a href="https://gist.github.com">gist</a> which has the specs for
a feature together with the other leads, wrap up a bugfix for the next release,
check one of the pull requests submitted by another team member and have
<a href="http://upload.wikimedia.org/wikipedia/commons/d/d4/Shawarma_ad_Istanbul_(01.10.2008).JPG">lotsa shawarma</a> for lunch.</p>

<p>As general rules, we would like:</p>

<ul>
<li>someone who speaks both <strong>Android and iOS</strong> (if you know only one of them but think you deserve a position, talk to us and we&rsquo;d be very happy to hear your point)</li>
<li>a few years of proficient <strong>development of mobile applications</strong>, possibly being a leader of a small/mid-sized team</li>
<li>knowledge of the <strong>latest trend</strong> in your technical sector (you tell us if <a href="http://www.omgchrome.com/android-webview-auto-update-future/">android auto-updates its webview component</a>, not the other way round :) as well as suggesting tools like <a href="http://hockeyapp.net/features/">Hockey</a>)</li>
<li><strong>Object-Oriented design</strong>: sounds boring but we don&rsquo;t limit ourselves to MVC, we actually need you to <a href="http://www.slideshare.net/odino/dont-screw-it-up-how-to-build-durable-web-apis-phpday-2014-in-verona-ita">consume our APIs and get the most out of them</a></li>
<li>it would be a plus to get someone who is passionate about <strong>OSS</strong> and would like to release some of our stuff after polishing them for the public</li>
</ul>


<h2>What do we offer?</h2>

<ul>
<li>a good salary, we don&rsquo;t want to hire people who feel they&rsquo;ve been underpaid</li>
<li>SPDY, HTTP APIs and a Service-Oriented Architecture</li>
<li>a <a href="https://www.google.com/maps/dir/First+Gulf+Bank+Metro+Station+1+-+Sheikh+Zayed+Rd+-+Dubai+-+United+Arab+Emirates/More+Cafe+Gold+%26+Diamond+Park+-+Sheikh+Zayed+Rd+-+Dubai+-+United+Arab+Emirates/@25.1264065,55.2068206,18z/data=!3m1!4b1!4m14!4m13!1m5!1m1!1s0x3e5f6bc621973f29:0x18a89384f349bdf6!2m2!1d55.207756!2d25.126699!1m5!1m1!1s0x3e5f6bc6122edfe3:0x435be27ccd3d1564!2m2!1d55.208316!2d25.126114!3e2">1-minute-walk</a> from the metro to the office</li>
<li>a <a href="http://tech.namshi.com/team">great team</a></li>
<li>you <strong>will and won&rsquo;t</strong> be alone: our team is made of ~15 software engineers and we share best practices at the architectual / software design level,
but don&rsquo;t have a way to re-invent the current team members into mobile hackers</li>
<li>growth, as mobile is getting bigger and bigger (for us and for the ecommerce market in general): we expect the mobile
development team to be growing as months will go by</li>
<li>a company which is standing on the <a href="http://www.rocket-internet.de/">shoulder of giants</a></li>
<li>the <em>&ldquo;10th our breakpoint&rdquo;</em>: if you work for 10 hours then have a break, order food and we will reimburse it</li>
<li>working with <a href="http://instagram.com/p/gpSOCenpPI/">these two guys</a></li>
</ul>


<h2>So what?</h2>

<p>Simply drop an email at <code>alessandro.nadalin@namshi.com</code> and let&rsquo;s make it real! Need more infos? Check <a href="http://tech.namshi.com/join-us">this</a>!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #40]]></title>
    <link href="http://tech.namshi.com/blog/2014/05/29/newsletter-number-40/"/>
    <updated>2014-05-29T12:45:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/05/29/newsletter-number-40</id>
    <content type="html"><![CDATA[<p><strong>TA-DA! TechThursday</strong> newsletter is here!</p>

<ul>
<li><p><a href="http://www.html5rocks.com/en/tutorials/es7/observe">Object.observe will change everything you know about data binding. It&rsquo;s the future.</a></p></li>
<li><p><a href="http://beta.slashdot.org/story/202599">PHP Next Generation</a></p></li>
<li><p><strong>SOLID</strong>: Single Responsibility (SRP), Open/Close, Liskov&rsquo;s Substitution, Interface Segregation, and Dependency Inversion.<br />
  Five principles that should guide you every time you write code.
  <a href="http://code.tutsplus.com/tutorials/solid-part-1-the-single-responsibility-principle--net-36074">Part#1</a>,
  <a href="http://code.tutsplus.com/tutorials/solid-part-2-the-openclosed-principle--net-36600">Part#2</a>,
  <a href="http://code.tutsplus.com/tutorials/solid-part-3-liskov-substitution-interface-segregation-principles--net-36710">Part#3</a>,
  <a href="http://code.tutsplus.com/tutorials/solid-part-4-the-dependency-inversion-principle--net-36872">Part#4</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="http://www.infoworld.com/slideshow/153868/20-cool-things-you-can-do-raspberry-pi-243042">20 cool things you can do with a Raspberry Pi</a></p></li>
<li><p><a href="http://www.pcworld.com/article/2159160/mit-tackled-earths-atmosphere-to-give-the-moon-broadband.html">MIT tackled Earth&rsquo;s atmosphere to give the moon broadband</a></p></li>
<li><p><a href="http://unix.stackexchange.com/questions/8916/when-should-i-not-kill-9-a-process">When should I not kill -9 a process?</a></p></li>
<li><p><a href="http://blog.workhere.io/googlebots-recent-improvements-might-revolutionize-web-development/">Google Bot’s Recent improvements might revolutionize web development</a></p></li>
<li><p><a href="https://github.com/mapmeld/gitjk#gitjk">Undo what you just did in Git</a></p></li>
<li><p><a href="http://wildlyinaccurate.com/a-hackers-guide-to-git">A hacker’s Guide to Git</a></p></li>
<li><p><a href="http://www.bennadel.com/blog/2631-workflow-differences-between-scope-watch-and-attributes-observe-in-angularjs.htm">Understanding the difference between $scope.$watch() and Attributes.$observe() in AngularJS</a></p></li>
<li><p><a href="http://www.20thingsilearned.com/en-US">20 Things I learned about browser and web: An interactive book by Google</a></p></li>
<li><p><a href="http://www.stevesouders.com/blog/2014/02/11/measuring-localstorage-performance/">Measuring the performance of local storage</a></p></li>
<li><p><a href="http://www.snopes.com/music/artists/vanhalen.asp">Van Halen&rsquo;s smart contract clauses</a></p></li>
<li><p><a href="https://aws.amazon.com/blogs/aws/protect-your-data-with-new-ebs-encryption">AWS introduces additional EBS encryption</a></p></li>
<li><p><a href="http://www.polygon.com/features/2014/5/13/5542406/qatar-girnaas-giddam">Making games in Qatar</a></p></li>
<li><p><a href="http://loopback.io">LoopBack, a new NodeJS framework</a></p></li>
<li><p><a href="http://gizmodo.com/5903827/the-humble-origins-of-the-html-blink-tag">How was the HTML blink tag born?</a></p></li>
<li><p><a href="https://github.com/cargomedia/vagrant-phpstorm-tunnel">Vagrant PhpStorm Tunnel, a cool vagrant plugin that it will forward all php calls to php in the Vagrant VM</a></p></li>
<li><p><a href="https://news.ycombinator.com/item?id=7806908">The new iteration of PHP (read the comments)</a> (for more drama you can read <a href="http://grokbase.com/t/php/php-internals/1455aesx7r/phpng-%04refactored-php-engine-with-big-performance-improvement/nested/page/3">internals discussion on PHPNG</a>)</p></li>
<li><p><a href="http://code.tutsplus.com/series/data-structures-succinctly-part-1--cms-551">Data Structures Succinctly ebook</a></p></li>
<li><p><a href="http://code.tutsplus.com/tutorials/the-repository-design-pattern--net-35804">The Repository Design Pattern (PHP)</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Welcome Nikita!]]></title>
    <link href="http://tech.namshi.com/blog/2014/05/26/welcome-nikita/"/>
    <updated>2014-05-26T23:40:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/05/26/welcome-nikita</id>
    <content type="html"><![CDATA[<p><img class="team left" src="http://tech.namshi.com/images/nikita.png"></p>

<p>Yesterday we got some cold breeze from Russia, which
is never bad considered that Dubai is getting ready
for the summer!</p>

<p>Nikita, one of our new API engineers, has joined the
team to feed our architecture with energy, good software engineering
and a ton of rock-solid PHP development!</p>

<p>You can get to know Nikita by checking out his <a href="https://github.com/nikita2206">github profile</a>,
a place where he likes to fork the official PHP repository
to fix bugs on the language itself (kudos!) or&hellip;by starting
to check our <a href="https://github.com/namshi">github page</a> out more often,
as we&rsquo;re gonna see some more open-source PHP libraries over there!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Welcome Shidhin!]]></title>
    <link href="http://tech.namshi.com/blog/2014/05/26/welcome-shidhin/"/>
    <updated>2014-05-26T15:36:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/05/26/welcome-shidhin</id>
    <content type="html"><![CDATA[<p><img class="team left" src="http://tech.namshi.com/images/shidhin.jpg"></p>

<p>Second announcement of the day (and we ain&rsquo;t done yet!):
I am super-duper-excited to welcome <a href="https://twitter.com/shidhincr">Shidhin CR</a>
in the family!</p>

<p>Shidhin has been working at FlipKart for a while and,
as soon as we got to know each other, found an immediate
connection: cutting edge technologies meet a cutting-edge, motivated
brain. He will be part of our <em>Frontend Engineering</em> team,
helping on AngularJS, some of the frontend design and
JavaScript in general (Did I mention <a href="http://tech.namshi.com/blog/2014/03/24/looking-for-some-fun-with-apis-or-javascript-we-have-what-you-need/">we love JavaScript?</a>).</p>

<p>As he describes himself:</p>

<p><em>I am is a senior Front end developer, passionate about latest UI best practices and front end technologies. I have over 6 years of experience in front end development, and core JavaScript expertise. In the free time, I can be found updating my blog or checking out some open source stuff.</em></p>

<p>You can read more about Shidhin in his <a href="http://www.undefinednull.com/">personal blog</a>
or&hellip;starting to check our <a href="https://github.com/namshi">github page</a> out more often,
as we&rsquo;re gonna see some more AngularJS-ish stuff over there!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Welcome Lucio!]]></title>
    <link href="http://tech.namshi.com/blog/2014/05/26/welcome-lucio/"/>
    <updated>2014-05-26T11:20:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/05/26/welcome-lucio</id>
    <content type="html"><![CDATA[<p><img class="team left" src="http://tech.namshi.com/images/lucio.jpg"></p>

<p>I am very happy to announce &ndash; even though I&rsquo;m a bit late &ndash; that
<a href="https://twitter.com/unlucio">Luciano &ldquo;unlucio&rdquo; Colosio</a>
is part of our crazy team!</p>

<p>He&rsquo;s been quite proficient in spreading JavaScript
all around his software architectures, thus we felt he
was a perfect match for Namshi: among his past creations
there&rsquo;s even a <a href="https://github.com/unlucio/MarcoPolo">REST driver for OrientDB</a> in NodeJS.</p>

<p>Lucio will boost our frontend productivity bringing in
the software design skills we always like to welcome:
simplicity, clean code and good engineering.</p>

<p>(<em>&hellip;and they say he&rsquo;s a great chef!</em>)</p>

<p>You can read more about Lucio in his <a href="http://blog.unlucio.com/">personal blog</a>
or&hellip;starting to check our <a href="https://github.com/namshi">github page</a> out more often,
as I sense we&rsquo;re gonna see some more NodeJS there!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jsDay and phpDay recap]]></title>
    <link href="http://tech.namshi.com/blog/2014/05/25/jsday-phpday-recap/"/>
    <updated>2014-05-25T19:33:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/05/25/jsday-phpday-recap</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://tech.namshi.com/images/posts/rasmus-namshi-scaled.png" width="800" title="Rasmus Lerdorf - Namshi team" alt="Rasmus Lerdorf with the Namshi team"></p>

<p>One week ago, Luciano, Lucio, Alex and I attended the annual <a href="http://jsday.it">jsDay</a> and <a href="http://phpday.it">phpDay</a> in Verona organized by the <a href="http://grusp.it">GrUSP</a>, the Italian PHP user Group.
It was a nice experience in the beautiful city of Verona, and an opportunity to meet interesting people from international communities while attending the talks during those 4 days.<br />
The conferences were sold out, with more than 300 attendees and two tracks per day. Kudos and props to the organizers!</p>

<br />


<!-- more -->


<p><img class="left" src="http://tech.namshi.com/images/posts/phpday-namshi-sponsor.jpg" width="200" title="Namshi phpDay sponsor" alt="Namshi phpDay sponsor"> Namshi was sponsoring the event, and we tried to do some recruitmement (did you check the <a href="http://tech.namshi.com/join-us">join-us</a> page?)</p>

<br />


<br />


<br />


<br />


<h2>jsDay</h2>

<p>During the jsDay, Luciano spoke about “AngularJS and mobile applications”, giving good insight into our experience using AngularJS while developing a mobile website.</p>

<p>There were other presentations worth mentioning:</p>

<ul>
<li><a href="https://speakerdeck.com/gillesruppert/angularjs-the-good-the-bad-and-the-ugly">“AngularJS: The Good, The Bad and The Ugly “</a> by Gilles Rupert.</li>
</ul>


<div style="width:600px">
<script async class="speakerdeck-embed" data-id="5f461ec0bd80013111d576b6210235ec" data-ratio="1.33333333333333" src="http://tech.namshi.com//speakerdeck.com/assets/embed.js"></script>
</div>


<ul>
<li><p><a href="http://www.slideshare.net/DanniFriedland/nsajs">“NSA.JS”</a> by Danni Friedland who presented this cool library to track the user browse experience</p></li>
<li><p><a href="http://www.slideshare.net/fgalassi/the-strange-world-of-javascript-and-all-its-little-asynchronous-beasts">“The strange world of Javascript and all its little asynchronous beasts”</a> by Federico Galassi</p></li>
<li><p><a href="http://massimiliano-mantione.github.io/talks/JsDay2014/ReactiveMetaprogramming/GHP/">“Monads, Promises, and Reactive Metaprogramming”</a> by Massimiliano Mantione</p></li>
</ul>


<p>The complete talks list with slides are on <a href="http://joind.in/event/view/1638">joind.in</a>.</p>

<br />


<h2>phpDay</h2>

<p><a href="http://talks.php.net/phpday14#/">The opening keynote</a> was addressed by Rasmus Lerdord (the PHP creator), showing us an interesting, and sometimes passionate, overview of what’s new in PHP 5.6 and the technical/design choices behind it.</p>

<p>Alex and I gave a talk about “How to build <strong>durable</strong> web apis” based on our experience at Namshi while
building our Service Oriented Architechture.</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/34815904" width="597" height="486" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/cirpo/dont-screw-it-up-how-to-build-durable-web-apis" title="Don&#x27;t screw it up: how to build durable web apis" target="_blank">Don&#x27;t screw it up: how to build durable web apis</a> </strong> from <strong><a href="http://www.slideshare.net/cirpo" target="_blank">alessandro cinelli</a></strong> </div></p>

<p>Other very interesting presentations:</p>

<ul>
<li><p>I really enjoyed the talk <a href="http://verraes.net/2014/03/practical-event-sourcing/">“Practical Event Sourcing”</a> by Mathias Verraes.
I also suggest <a href="https://speakerdeck.com/mathiasverraes">checking other presentations</a> from this great speaker.</p></li>
<li><p>Another great presentation was given by Marcello Duarte, the master of <a href="http://www.phpspec.net/">PHPspec</a>, <a href="http://www.slideshare.net/marcello.duarte/emergent-design-with-phpspec">&ldquo;Emergent design with phpspec&rdquo;</a></p></li>
<li><p>Konstantin Kudryashov, the guy behind <a href="http://behat.org/">Behat</a> with <a href="http://www.slideshare.net/everzet/moving-away-from-legacy-code-with-bdd">&ldquo;Moving Away from Legacy code with BDD&rdquo;</a></p></li>
</ul>


<p>The complete phpDay talk list and slides can be found on <a href="http://joind.in/event/view/1637">joind.in</a> as well.</p>

<h2>Join communities!</h2>

<p>Attending conferences that are community driven like jsDay and phpDay
are always a great moment to improve yourself as a developer and they give you the possibility to be part of the community.
You have the chance to understand what’s going on in our field, talk in person with other devs that maybe you just know because you sent a PR to their awesome opensource project on Github, getting tons of advices and inspiration and so on.
Keep following <a href="http://twitter.com/technamshi">@TechNamshi</a> on twitter, a <strong>new community</strong> is coming in Dubai&hellip; <strong>stay tuned!</strong></p>

<p>Follow <a href="http://twitter.com/jsconfit">@jsday</a> and <a href="http://twitter.com/phpday">@phpday</a> to stay updated on when they are going to release the talks videos.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #39]]></title>
    <link href="http://tech.namshi.com/blog/2014/05/22/newsletter-number-39/"/>
    <updated>2014-05-22T11:34:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/05/22/newsletter-number-39</id>
    <content type="html"><![CDATA[<p>&hellip;another <strong>TechThursday</strong> here!</p>

<ul>
<li><p><a href="http://www.slideshare.net/odino/dont-screw-it-up-how-to-build-durable-web-apis-phpday-2014-in-verona-ita">Presentation we gave at the PHPDay</a></p></li>
<li><p><a href="https://speakerdeck.com/gillesruppert/angularjs-the-good-the-bad-and-the-ugly">AngularJS: the Good, the Bad and the Ugly. Slides from jsDay</a></p></li>
<li><p><a href="http://verraes.net/2014/03/practical-event-sourcing/">Practical Event Sourcing</a></p></li>
<li><p><a href="http://diginomica.com/2014/05/07/asos-cio-talks-nightmare-aligning-technology-business">Asos: aligning technology with business</a></p></li>
<li><p><a href="https://github.com/substack/browserify-handbook">Building modular applications with browserify</a></p></li>
<li><p><a href="http://vimeo.com/63022489">Tutorial &ndash; Creating a Poll application in 15 minutes with Phalcon &lsquo;The fastest PHP framework&rsquo;</a></p></li>
<li><p><a href="http://code.tutsplus.com/tutorials/an-introduction-to-the-device-orientation-api--cms-21067">An Introduction to the Device Orientation API</a></p></li>
<li><p><a href="https://laracasts.com/lessons/gulp-this">Gulp this &ndash; a quick video to get started with Gulp</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="http://learn.ionicframework.com/">Start learning Ionic for mobile app development</a></p></li>
<li><p><a href="http://www.oodesign.com/design-principles.html">Some good software design principles</a></p></li>
<li><p><a href="http://hub.github.com/">Github access from command line</a></p></li>
<li><p><a href="http://www.jamesshore.com/Blog/How-Does-TDD-Affect-Design.html">How does TDD affect design</a></p></li>
<li><p><a href="http://erikaheidi.com/blog/setting-up-a-development-machine-with-ubuntu-1404-trusty-tahr">Setting up a development machine with Ubuntu 14.04 (Trusty Tahr)</a></p></li>
<li><p><a href="https://forge.laravel.com/">Instant PHP Platforms on Linode, DigitalOcean, AWS, &amp; Rackspace</a></p></li>
<li><p><a href="http://gethoneybadger.com/">A presonal look at websites</a></p></li>
<li><p><a href="http://blog.makandra.com/2010/04/the-greatest-bug-i-never-fixed/">The greatest bug I never fixed</a></p></li>
<li><p><a href="https://github.com/micahflee/onionshare">Share large files based on Tor</a></p></li>
<li><p><a href="http://jacquesmattheij.com/choosing-web-framework-language-combo">Choosing a Web Frameword/Language Combo for the Next Decade</a></p></li>
<li><p><a href="https://storify.com/1Marc/polymer-web-components-will-replace-angular-direct/">Future of AngularJS: Polymer/ Web components might replace directives</a></p></li>
<li><p><a href="http://gent.ilcore.com/2011/03/how-not-to-trigger-layout-in-webkit.html">Improving rendering performance of webpages &ndash; reducing layout triggers</a></p></li>
<li><p><a href="http://www.frontendjournal.com/javascript-es6-learn-important-features-in-a-few-minutes/">Learning the 6 important features of ES6 in few minutes</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #38]]></title>
    <link href="http://tech.namshi.com/blog/2014/05/15/newsletter-number-38/"/>
    <updated>2014-05-15T11:38:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/05/15/newsletter-number-38</id>
    <content type="html"><![CDATA[<p>Hello everyone and welcome to <a href="http://tech.namshi.com/blog/categories/techthursday/"><strong>TechThursday</strong>!</a>!</p>

<p>This week we have a collection of programming and system news and tips and general ideas for your everyday programming routine.</p>

<ul>
<li><p><a href="http://www.youtube.com/watch?v=bjWanTsG22c&amp;list=PLb0IAmt7-GS2fdbb1vVdP8Z8zx1l2L8YS">Hack Dev Day Playlist!</a></p></li>
<li><p><a href="http://cramer.io/2014/05/03/on-pull-requests/">On Pull Requests</a></p></li>
<li><p><a href="http://javarevisited.blogspot.ae/2014/05/10-articles-every-programmer-must-read.html">10 Articles Every Programmer Must Read</a></p></li>
<li><p><a href="http://williamdurand.fr/2013/07/30/from-stupid-to-solid-code/">From STUPID to SOLID Code!</a></p></li>
<li><p><a href="http://news.netcraft.com/archives/2014/05/09/keys-left-unchanged-in-many-heartbleed-replacement-certificates.html">Keys left unchanged in many Heartbleed replacement certificates!</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="http://www.rfc-editor.org/rfc/rfc7258.txt">RFC on Best Current Practice: Pervasive Monitoring is an Attack</a></p></li>
<li><p><a href="http://packetbeat.com/">Open Source application monitoring &amp; packet tracing system</a></p></li>
<li><p><a href="http://bowery.io/">A cloud based dev environment that can be setup in a minute!</a></p></li>
<li><p><a href="https://mist.io/">mist.io Cloud Management in Your Pocket</a></p></li>
<li><p><a href="http://www.sitepoint.com/php-continuous-integration-travis-ci/">Travis ci with PHP</a></p></li>
<li><p><a href="http://www.thinkster.io/angularjs/GtaQ0oMGIl">A Better Way to Learn AngularJS</a></p></li>
<li><p><a href="https://github.com/coreos/etcd">A highly-available key value store for shared configuration and service discovery</a></p></li>
<li><p><a href="http://naimhamadi.wordpress.com/2014/05/13/mastering-css-selectors/">Mastering CSS selectors</a></p></li>
<li><p><a href="https://github.com/rackerlabs/wonton">If you want to transfer any tools from Amazon S3 to Rackspace or Vice Versa</a></p></li>
<li><p><a href="http://moduscreate.com/5-best-mobile-web-app-frameworks-ionic-angulalrjs/">5 Best Mobile Web App Frameworks: Ionic (AngularJS)</a></p></li>
<li><p><a href="https://github.com/ekalinin/envirius">Universal Virtual Environments Manager</a></p></li>
<li><p><a href="http://harish11g.blogspot.ae/2013/08/Load-balancing-Amazon-RDS-MySQL-read-replica-slaves-using-HAProxy.html">Load Balancing Amazon RDS Read Replica&rsquo;s using HAProxy</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #37]]></title>
    <link href="http://tech.namshi.com/blog/2014/05/08/newsletter-number-37/"/>
    <updated>2014-05-08T16:47:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/05/08/newsletter-number-37</id>
    <content type="html"><![CDATA[<p>It&rsquo;s <strong>TechThursday</strong> again: here&rsquo;s what we&rsquo;ve been excited about over the past week!</p>

<ul>
<li><p><a href="http://code.tutsplus.com/tutorials/key-value-observing-with-facebooks-kvocontroller--cms-20352">Key-Value Observing with Facebook&rsquo;s KVOController</a></p></li>
<li><p><a href="http://code.tutsplus.com/tutorials/refactoring-legacy-code-part-3-complex-conditionals--cms-20944">Refactoring Legacy Code: Part 3 &ndash; Complex Conditionals</a></p></li>
<li><p><a href="https://www.youtube.com/watch?v=MSH9yB9y4ZA">Introducing Synth &ndash; A new Node.js web framework designed just for AngularJs</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="https://github.com/visionmedia/n">Simple flavour of node binary management, no subshells, no profile setup, no convoluted api, just simple</a></p></li>
<li><p><a href="http://blog.codeship.io/2014/05/07/nodejs-beginners-guide.html">The Absolute Beginner’s Guide to Node.js</a></p></li>
<li><p><a href="https://econsultancy.com/blog/64794-20-fantastically-helpful-ifttt-recipes">20 fantastically helpful IFTTT recipes &ndash; use IFTTT</a></p></li>
<li><p><a href="http://scotch.io/tutorials/javascript/angular-routing-using-ui-router">AngularJS Routing Using UI-Router with states</a></p></li>
<li><p><a href="https://github.com/johnkary/phpunit-speedtrap">Reports on slow-running tests in your PHPUnit test suite</a></p></li>
<li><p><a href="http://designprinciplesftw.com/">Design principles</a></p></li>
<li><p><a href="https://github.com/marmelab/gremlins.js/">Gremlins.js, Monkey testing library for web apps and Node.js</a></p></li>
<li><p><a href="http://tech.namshi.com/blog/2014/05/04/git-tips-and-tricks/">Git tips and tricks</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3 PHP 5.5 features we are using at Namshi]]></title>
    <link href="http://tech.namshi.com/blog/2014/05/07/3-php-5-dot-5-features-we-are-using-at-namshi/"/>
    <updated>2014-05-07T09:03:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/05/07/3-php-5-dot-5-features-we-are-using-at-namshi</id>
    <content type="html"><![CDATA[<p>Here at  <a href="http://www.namshi.com">Namshi</a> we are constanty updating our software stack to exploit the best benefits latest technology has to offer. Keeping up to date with the latest stable version of PHP, we are using <a href="http://php.net/releases/5_5_0.php">PHP 5.5</a> for some time now. We also leverage the new features added in PHP 5.5; this post will shed light on some of the features that have come in handy during our development process.</p>

<p>PHP <a href="https://php.net/manual/en/migration54.new-features.php">5.4</a> and PHP <a href="https://php.net/manual/en/migration55.new-features.php">5.5</a> both were feature packed PHP releases, we have found 3 of these features useful in our routine PHP development which are discussed below:</p>

<!-- more -->


<h3>array_column function</h3>

<p>The short array syntax was introduced in PHP 5.4, which makes creating arrays simpler than the old syntax.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$productIds = [1001, 1005, 1007];</span>
</span><span class='line'>
</span><span class='line'><span class="x">//array with keys and values</span>
</span><span class='line'><span class="x">$products = [</span>
</span><span class='line'><span class="x">    [&quot;title&quot; =&gt; &quot;Vito Solo Shirt&quot;, &quot;sku&quot; =&gt; &quot;VI714AT94SIB&quot;, &quot;price&quot; =&gt; 180.00],</span>
</span><span class='line'><span class="x">    [&quot;title&quot; =&gt; &quot;Core Ultra Shirt&quot;, &quot;sku&quot; =&gt; &quot;JA872AT40VYL&quot; , &quot;price&quot; =&gt; 195.00],</span>
</span><span class='line'><span class="x">    [&quot;title&quot; =&gt; &quot;Swoosh T-shirt&quot;, &quot;sku&quot; =&gt; &quot;NI727AT17RGG&quot; , &quot;price&quot; =&gt; 130.00]</span>
</span><span class='line'><span class="x">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>For arrays like in the above example or for result sets from a database query, the <a href="http://www.php.net/manual/en/function.array-column.php">array_column</a> PHP function comes in very handy to extract out the needed data as shown below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$productTitles = array_column($products, &quot;title&quot;);</span>
</span><span class='line'>
</span><span class='line'><span class="x">//product titles will be a new array of titles extacted from products array in above example code</span>
</span><span class='line'><span class="x">Array</span>
</span><span class='line'><span class="x">(</span>
</span><span class='line'><span class="x">    [0] =&gt; Vito Solo Shirt</span>
</span><span class='line'><span class="x">    [1] =&gt; Core Ultra Shirt</span>
</span><span class='line'><span class="x">    [2] =&gt; Swoosh T-shirt</span>
</span><span class='line'><span class="x">)</span>
</span><span class='line'>
</span><span class='line'><span class="x">//if you want to create a key value array where key is the sku and value is the price, it can be done by the following call</span>
</span><span class='line'>
</span><span class='line'><span class="x">$productPrices = array_column($products, &quot;price&quot;, &quot;sku&quot;);</span>
</span><span class='line'>
</span><span class='line'><span class="x">Array</span>
</span><span class='line'><span class="x">(</span>
</span><span class='line'><span class="x">    [VI714AT94SIB] =&gt; 180</span>
</span><span class='line'><span class="x">    [JA872AT40VYL] =&gt; 195</span>
</span><span class='line'><span class="x">    [NI727AT17RGG] =&gt; 130</span>
</span><span class='line'><span class="x">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>The PHP <code>array_colum</code> function is an easy yet effective way to extract out needed informaton from an array which will make working with PHP arrays pleasant than usual.</p>

<h3>finally</h3>

<p>Finally, the <code>finally</code> keyword has been added to PHP, as mentioned in the <a href="http://www.php.net/manual/en/language.exceptions.php">exceptions</a> documentation on the PHP website:</p>

<blockquote><p>Code within the finally block will always be executed after the try and catch blocks, regardless of whether an exception has been thrown, and before normal execution resumes.</p></blockquote>

<p>This makes a very good use case when some code needs to be executed if an exception occurs and <code>return</code> has to be called. A typical example is closing the database connection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">try {</span>
</span><span class='line'><span class="x">     //open sql connection </span>
</span><span class='line'><span class="x">     if ($condition) { </span>
</span><span class='line'><span class="x">        return false;</span>
</span><span class='line'><span class="x">     }</span>
</span><span class='line'><span class="x">  }</span>
</span><span class='line'><span class="x">  finally {</span>
</span><span class='line'><span class="x">    //close the sql connection, this will be executed even if the return is called.</span>
</span><span class='line'><span class="x">  }</span>
</span></code></pre></td></tr></table></div></figure>


<p>There are other use cases of finally, still beware of using it as you might find out your exception has been <a href="http://www.php.net/manual/en/language.exceptions.php#114207">silenced</a>. Use finally with care and utilize it where needed.</p>

<h3>DateTimeImmutable</h3>

<p>The <a href="http://www.php.net/manual/en/class.datetimeimmutable.php">DateTimeImmutable</a> class is useful if you want the date time to stay the same for the execution context. The main instance is never modified but returns a new object instead for any operation like adding date. It works very well when you want to save the <code>created_at</code> and <code>updated_at</code> date time columns in the database.</p>

<p>An example to show that even adding date to <code>DateTimeImmutable</code> class does not change it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$date           = new DateTimeImmutable();</span>
</span><span class='line'><span class="x">$datePlusOneDay = $date-&gt;add(new DateInterval(&#39;P1D&#39;));</span>
</span><span class='line'>
</span><span class='line'><span class="x">print $date-&gt;format(&#39;Y-M-d H:i:s&#39;);</span>
</span><span class='line'><span class="x">print &quot;---&quot;;</span>
</span><span class='line'><span class="x">print $datePlusOneDay-&gt;format(&#39;Y-M-d H:i:s&#39;);</span>
</span><span class='line'>
</span><span class='line'><span class="x">//output</span>
</span><span class='line'><span class="x">//2014-May-07 22:37:04---2014-May-08 22:37:04</span>
</span></code></pre></td></tr></table></div></figure>


<p>Another example for the <code>created_at</code> and <code>updated_at</code> use case:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">//in some entity class in the setCreatedAt method</span>
</span><span class='line'><span class="x">$this-&gt;createdAt = new DateTimeImmutable();</span>
</span><span class='line'>
</span><span class='line'><span class="x">//in some entity class in some prePresist method</span>
</span><span class='line'><span class="x">$this-&gt;updatedAt = new DateTimeImmutable();</span>
</span></code></pre></td></tr></table></div></figure>


<p>There are lots of resources mentioning the new features of PHP 5.4 and PHP 5.5, I hope mentioning this useful subset helps you utilize them to solve issues.</p>
]]></content>
  </entry>
  
</feed>
